Each of the cascaded ciphers uses its own key. All encryption keys are mutually independent (note that header keys are independent too, even though they are derived from a single password)

Header keys used by ciphers in a cascade are mutually independent, even though they are derived from a single password. For our Fernet-GOST-PyNaCl cascade, the key derivation function is instructed to derive a 768-bit encryption key from a given password. The generated 768-bit header key is then split into three 256-bit keys, out of which the first key is used by Fernet, the second key is used by GOST, and the third by PyNaCl. Hence, even when an adversary has one of the keys, he cannot use it to derive the other keys, as there is no feasible method to determine the password from which the key was derived (except for brute force attack mounted on a weak password).

256*3=768-bit salt is used, which means there are 2^768 keys for each password. This significantly decreases vulnerability to 'off-line' dictionary/'rainbow table' attacks (pre-computing all the keys for a dictionary of passwords is very difficult when a salt is used). The salt consists of random values generated by python's [os.urandom()](https://docs.python.org/3.5/library/os.html#os.urandom) during the database creation process.
